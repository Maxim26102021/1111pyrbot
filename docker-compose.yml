services:
  db:
    image: postgres:16
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./common/sql/001_init.sql:/docker-entrypoint-initdb.d/001_init.sql  # Обновите путь
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    volumes:
      - redisdata:/data

  reader:
    build:
      context: .
      dockerfile: reader/Dockerfile
    env_file: .env
    volumes:
      - ./sessions:/app/sessions
    depends_on:
      db:
        condition: service_healthy

  bot:
    build:
      context: .
      dockerfile: bot/Dockerfile
    env_file: .env
    volumes:
      - ./sessions:/app/sessions  # Добавить это
    depends_on:
      db:
        condition: service_healthy

volumes:
  pgdata:
  redisdata:
